{"version":3,"sources":["context/AppContext.js","routes/routeRules.js","utils/utilities.js","hooks/usePikachu.js","components/labelWithInput/index.jsx","components/labelWithSelect/index.jsx","container/login/index.jsx","components/tableList/index.jsx","components/modal/index.jsx","container/books/AddBookPopup.jsx","routes/routesData.js","container/books/index.jsx","Navigations/header/index.jsx","layout/AppLayout.js","layoutRoute/AppRoute.js","layout/DefaultLayout.js","layoutRoute/DefaultRoute.js","components/notFound/index.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","AppProvider","props","useState","adminDetails","id","phone","password","users","books","state","setState","Provider","value","children","routeRules","landing","signIn","signUp","notNull","data","undefined","usePikachu","useContext","addNewBook","prevState","success","message","updateBook","bookIndex","findIndex","book","name","author","date","description","res","console","log","toString","length","addUsers","LabelWithInput","label","placeholder","onChange","type","isTextArea","className","rows","defaultProps","LabelWithSelect","array","options","Array","isArray","map","option","index","key","Login","toast","configure","autoClose","draggable","hideProgressBar","userId","setUserId","setPassword","userType","setUserType","setPhone","target","onClick","e","preventDefault","test","error","history","push","TableList","tableHead","tableBody","trData","forEach","head","renderHead","body","Object","entries","idx","renderColmns","colSpan","renderBody","age","heigh","Modal","style","show","display","hidePopup","AddBookPopup","updateMode","editBookData","setName","setAuthor","setDescription","setDate","useEffect","reset","handleInputChange","onSubmit","Date","now","routesData","path","component","auth","exact","bookList","setBookList","showAddBook","setShowAddBook","setUpdateMode","setEditBookData","afterAddEdit","handleEditBook","search","setSearch","searchBooks","setSearchBooks","filterData","filter","includes","login","Header","userDetails","AppLayout","AppRoute","Component","rest","render","matchProps","localStorage","getItem","to","pathname","from","location","DefaultLayout","DefaultRoute","NotFound","App","route","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7454350e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nexport const AppProvider = (props) => {\r\n    const initialSate = {\r\n        adminDetails: {\r\n            id: \"mittal.karan60@gmail.com\",\r\n            phone: \"9958708339\",\r\n            password: \"12345678\",\r\n        },\r\n\r\n\r\n\r\n        users: [],\r\n        books: [],\r\n    };\r\n\r\n    const [state, setState] = React.useState(initialSate);\r\n\r\n    return (\r\n        <AppContext.Provider value={[state, setState]}>\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    )\r\n};\r\n\r\n","export const routeRules = {\r\n    landing: \"/\",\r\n\r\n\r\n    signIn: '/signin',\r\n\r\n    signUp: \"/signup\",\r\n\r\n    books: \"/books\",\r\n\r\n\r\n\r\n\r\n\r\n};\r\n","import moment from 'moment'\r\n\r\nfunction alphaOnly ( event ) {\r\n    if (!/^[a-z A-Z]*$/.test(event.key)) {\r\n        // alert(\"Please enter alphabet only\");\r\n        event.preventDefault();\r\n    }\r\n}\r\n\r\nfunction alphaNumOnly (event) {\r\n    if (/[^0-9a-zA-Z]/.test(event.key)) {\r\n        event.preventDefault();\r\n    }\r\n}\r\n\r\nfunction objectHasKey (obj, key) {\r\n    if ( obj !== undefined && obj !== null && Object.keys(obj).length > 0 && obj.hasOwnProperty(key)) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nfunction objectHasKeys (obj) {\r\n    if ( obj !== undefined && obj !== null && Object.keys(obj).length > 0 ) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nfunction validateEmail(emailField){\r\n    return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(emailField);\r\n}\r\n\r\nfunction arrayNotNull(array) {\r\n    if ( array !== undefined && array !== null && Array.isArray(array) && array.length > 0){\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nfunction notNull(data) {\r\n    if ( data !== undefined && data !== null && data !== '' ){\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\n\r\nfunction defaultDate(date) {\r\n    return moment(date).format('DD/MM/YYYY')\r\n}\r\n\r\nfunction defaultDateTime(date) {\r\n    return moment(date).format('DD/MM/YYYY: hh:mm A')\r\n}\r\n\r\nexport {alphaNumOnly, alphaOnly, objectHasKey, objectHasKeys, validateEmail, arrayNotNull, notNull, defaultDate, defaultDateTime};\r\n","import React from \"react\";\r\nimport {AppContext} from \"../context/AppContext\";\r\nimport {notNull} from \"../utils/utilities\";\r\n\r\nconst usePikachu = () => {\r\n\r\n    const [state, setState] = React.useContext(AppContext);\r\n\r\n    function addUsers(data) {\r\n        setState(prevState => {\r\n            return {\r\n                ...prevState,\r\n                users: [\r\n                    ...prevState.users,\r\n                    data\r\n                ]\r\n            }\r\n        })\r\n    }\r\n\r\n    function signIn(data) {\r\n        let res = {\r\n            success: false,\r\n            message: ''\r\n        };\r\n\r\n        if (data.id === \"\"){\r\n            res.message = \"Id can not be null\"\r\n        } else if (data.password === \"\"){\r\n            res.message = \"Password can not be null\"\r\n        } else if (data.phone === \"\"){\r\n            res.message = \"Phone can not be null\"\r\n            console.log(\"length==>\", data.phone.toString().length);\r\n        } else if (data.phone.toString().length !== 10 ){\r\n            res.message = \"Phone must be of 10 digit\"\r\n        } else if (data.id !== state.adminDetails.id){\r\n            res.message = \"Id is not registered\"\r\n        } else if (data.phone !== state.adminDetails.phone){\r\n            res.message = \"Incorrect Phone\"\r\n        } else if (data.password !== state.adminDetails.password){\r\n            res.message = \"Incorrect Password\"\r\n        } else {\r\n            res.message = \"Login succesfull\";\r\n            res.success = true\r\n        }\r\n        return res;\r\n    }\r\n\r\n    function setUsersData(data) {\r\n        setState(prevState => {\r\n            return {\r\n                ...prevState,\r\n                usersData: data\r\n            }\r\n        })\r\n    }\r\n\r\n    function addNewBook(data){\r\n        setState(prevState => {\r\n            return {\r\n                ...prevState,\r\n                books: [...prevState.books, data]\r\n            }\r\n        })\r\n        return {\r\n            success: true,\r\n            message: \"Book Added successfully\"\r\n        }\r\n    }\r\n\r\n    function updateBook(data){\r\n        if (notNull(state.books)){\r\n            let bookIndex = state.books.findIndex(book => book.id === data.id)\r\n            let books = [...state.books];\r\n            books[bookIndex].name = data.name;\r\n            books[bookIndex].author = data.author;\r\n            books[bookIndex].date = data.date;\r\n            books[bookIndex].description = data.description;\r\n            setState(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    books: books\r\n                }\r\n            })\r\n            return {\r\n                success: true,\r\n                message: \"Book updated successfully\"\r\n            }\r\n        } else {\r\n            return {\r\n                success: false,\r\n                message: \"No Books Available\"\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        adminDetails: state.adminDetails,\r\n\r\n        users: state.users,\r\n\r\n        books: state.books,\r\n\r\n        addNewBook,\r\n\r\n        updateBook,\r\n\r\n        signIn: signIn,\r\n\r\n        addUsers: addUsers,\r\n    }\r\n};\r\n\r\nexport default usePikachu;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LabelWithInput = ({label, value, placeholder, onChange, type, name, isTextArea}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            {\r\n                label === \"\" ?\r\n                    <></>:\r\n                    <label>{label}</label>\r\n            }\r\n            {\r\n                isTextArea ?\r\n                    <textarea\r\n                              rows=\"3\"\r\n                              type={type}\r\n                              name={name}\r\n                              className=\"form-control\"\r\n                              placeholder={placeholder}\r\n                              value={value}\r\n                              onChange={onChange}/>:\r\n                    <input type={type}\r\n                           name={name}\r\n                           className=\"form-control\"\r\n                           placeholder={placeholder}\r\n                           value={value}\r\n                           onChange={onChange}\r\n                    />\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nLabelWithInput.defaultProps = {\r\n    label: \"\",\r\n    value: \"\",\r\n    onChange: () => {},\r\n    type: 'text',\r\n    placeholder: '',\r\n    name: '',\r\n    isTextArea: false,\r\n};\r\n\r\nLabelWithInput.propTypes = {\r\n    label: PropTypes.string,\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    type: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    name: PropTypes.string,\r\n    isTextArea: PropTypes.bool,\r\n};\r\n\r\nexport default LabelWithInput;\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {arrayNotNull} from \"../../utils/utilities\";\r\n\r\nconst LabelWithSelect = ({label, value, placeholder, onChange, options}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label>{label}</label>\r\n            <select name=\"\"\r\n                    id=\"\"\r\n                    className=\"form-control\"\r\n                    placeholder={placeholder}\r\n                    value={value}\r\n                    onChange={onChange}>\r\n                {\r\n                    arrayNotNull(options) ?\r\n                        options.map((option, index) => {\r\n                            return <option value={option.value} key={index}>{option.label}</option>\r\n                        }) :\r\n                        <option value=\"\">No Options Available</option>\r\n                }\r\n            </select>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nLabelWithSelect.defaultProps = {\r\n    label: \"\",\r\n    value: \"\",\r\n    onChange: () => {},\r\n    type: 'text',\r\n    placeholder: '',\r\n    options: [],\r\n};\r\n\r\nLabelWithSelect.propTypes = {\r\n    label: PropTypes.string,\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    type: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    options: PropTypes.array,\r\n};\r\n\r\nexport default LabelWithSelect;\r\n","import React, {useState} from 'react';\r\nimport usePikachu from \"../../hooks/usePikachu\";\r\nimport {routeRules} from \"../../routes/routeRules\";\r\nimport LabelWithInput from \"../../components/labelWithInput\";\r\nimport LabelWithSelect from \"../../components/labelWithSelect\";\r\nimport {validateEmail} from \"../../utils/utilities\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\n\r\nconst Login = (props) => {\r\n\r\n    toast.configure({\r\n        autoClose: 3000,\r\n        draggable: false,\r\n        hideProgressBar: true\r\n    });\r\n\r\n    const { signIn } = usePikachu();\r\n\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [userType, setUserType] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n\r\n\r\n    const login = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( !validateEmail(userId)){\r\n            toast.error(\"Please enter valid email\")\r\n        }\r\n\r\n        const data =  {\r\n            id: userId,\r\n            phone: phone,\r\n            password: password,\r\n        };\r\n\r\n        const res = signIn(data);\r\n        if (res.success){\r\n            toast.success(res.message)\r\n            props.history.push(routeRules.books)\r\n        } else {\r\n            toast.error(res.message)\r\n        }\r\n        console.log(\"data===>\", data);\r\n\r\n    };\r\n\r\n    const userTypeOptions = [\r\n        {value: \"\", label: \"Please Select user type\"},\r\n        {value: \"admin\", label: \"Admin\"},\r\n        {value: \"user\", label: \"User\"},\r\n    ];\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <ToastContainer/>\r\n            <div className=\"login\">\r\n                <div className=\"text-center\">\r\n                    <h3>Welcome to Library system</h3>\r\n                </div>\r\n                <form>\r\n                    <LabelWithInput\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        label={\"Email address\"}\r\n                        value={userId}\r\n                        onChange={({target: {value}}) => setUserId(value)}\r\n                        placeholder={\"Enter Email\"}\r\n                    />\r\n                    <LabelWithInput\r\n                        type=\"number\"\r\n                        name=\"phone\"\r\n                        label={\"Phone No.\"}\r\n                        value={phone}\r\n                        onChange={({target: {value}}) => setPhone(value)}\r\n                        placeholder={\"Enter Phone\"}\r\n                    />\r\n                    <LabelWithInput\r\n                        label={\"Password\"}\r\n                        value={password}\r\n                        onChange={({target: {value}}) => setPassword(value)}\r\n                        placeholder={\"Enter Password\"}\r\n                    />\r\n                    <LabelWithSelect\r\n                        label={\"User Type\"}\r\n                        value={userType}\r\n                        onChange={({target: {value}}) => setUserType(value)}\r\n                        options={userTypeOptions}\r\n                    />\r\n                    <div className=\"text-center\">\r\n                        <button type=\"submit\"\r\n                                className=\"btn btn-primary\"\r\n                                onClick={login}>\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TableList = (props) => {\r\n    const {tableHead, tableBody} = props;\r\n\r\n    const renderColmns = (body) => {\r\n        return Object.entries(body).map(([key, value], idx) => {\r\n            return (\r\n                <td key={(idx+key)}>\r\n                    {value}\r\n                </td>\r\n            )\r\n        });\r\n    };\r\n\r\n    const renderBody = () => {\r\n        let trData = [];\r\n        tableBody.forEach((body, index) => {\r\n            trData.push(\r\n                <tr key={index}>\r\n                    {renderColmns(body)}\r\n                </tr>\r\n            )\r\n        });\r\n        if(!(tableBody.length > 0) ){\r\n            trData = [\r\n                (\r\n                    <tr key=\"123\">\r\n                        <td className=\"text-center\"\r\n                            colSpan={tableHead.length}>\r\n                            No Data\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            ]\r\n        }\r\n        return trData\r\n    };\r\n\r\n    const renderHead = () =>{\r\n        let trData = [];\r\n        tableHead.forEach((head, index) => {\r\n            trData.push(\r\n                <th key={index}>\r\n                    {head}\r\n                </th>\r\n            )\r\n        });\r\n        return trData;\r\n    };\r\n\r\n    return (\r\n        <table className=\"table table-bordered\">\r\n            <thead>\r\n            <tr>\r\n                {renderHead()}\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {renderBody()}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nTableList.defaultProps = {\r\n    tableHead: [\"First\", \"Second\", \"...\" ],\r\n    tableBody: [\r\n        {\r\n            name: 'karan',\r\n            age: '21',\r\n            heigh: '5.9',\r\n        },\r\n        {\r\n            name: 'bunny',\r\n            age: '21',\r\n            heigh: '5.9',\r\n        },\r\n    ]\r\n};\r\n\r\nTableList.propTypes = {\r\n    tableHead: PropTypes.array.isRequired,\r\n    tableBody: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default TableList;","import React, {Fragment}  from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Modal.css'\r\n\r\nfunction Modal (props){\r\n    return (\r\n        <Fragment>\r\n            <div className='modal-wrapper' style={props.show ? {display: 'block'} : {display: 'none'} }>\r\n                <div className='modal-content'>\r\n                    <div className='close-btn'>\r\n                        <span onClick={props.hidePopup}>\r\n                            x\r\n                            {/*<i className=\"fa fa-times\" aria-hidden=\"true\"/>*/}\r\n                        </span>\r\n                    </div>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nModal.propTypes = {\r\n    hidePopup: PropTypes.func.isRequired,\r\n    show: PropTypes.bool.isRequired\r\n};\r\n\r\nModal.defaultProps = {\r\n    show: false\r\n};\r\n\r\nexport default Modal;","import React, {useEffect, useState} from 'react';\r\nimport Modal from \"../../components/modal\";\r\nimport LabelWithInput from \"../../components/labelWithInput\";\r\nimport usePikachu from \"../../hooks/usePikachu\";\r\nimport {toast} from \"react-toastify\";\r\nimport {notNull} from \"../../utils/utilities\";\r\n\r\nconst AddBookPopup = ({show, hidePopup, updateMode, editBookData}) => {\r\n\r\n    toast.configure({\r\n        autoClose: 3000,\r\n        draggable: false,\r\n        hideProgressBar: true\r\n    });\r\n\r\n    const [name, setName] = useState(\"\");\r\n\r\n    const [author, setAuthor] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n    const { addNewBook, updateBook } = usePikachu();\r\n\r\n    useEffect(() => {\r\n        if (notNull(editBookData)){\r\n            setName(editBookData.name);\r\n            setAuthor(editBookData.author);\r\n            setDate(editBookData.date);\r\n            setDescription(editBookData.description)\r\n        } else {\r\n            reset();\r\n        }\r\n    }, [editBookData])\r\n\r\n    useEffect(() => {\r\n        reset();\r\n    }, [])\r\n\r\n    const reset = () => {\r\n        setName(\"\");\r\n        setAuthor(\"\");\r\n        setDate(\"\");\r\n        setDescription(\"\")\r\n    }\r\n\r\n    const handleInputChange = ({target: {name, value}}) => {\r\n        if (name === \"name\") setName(value)\r\n        else if (name === \"author\") setAuthor(value)\r\n        else if (name === \"description\") setDescription(value)\r\n        else if (name === \"date\") setDate(value)\r\n    }\r\n\r\n    const addBook = (e) => {\r\n        e && e.preventDefault();\r\n        let data = {\r\n            id: Date.now(),\r\n            name,\r\n            author,\r\n            date,\r\n            description\r\n        }\r\n\r\n        let res =  updateMode ? updateBook({...data, id: editBookData.id}) : addNewBook(data);\r\n\r\n        if (res.success){\r\n            hidePopup()\r\n            toast.success(res.message)\r\n        } else {\r\n            hidePopup()\r\n            toast.error(res.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal show={show} hidePopup={hidePopup}>\r\n            <div className=\"text-center\">\r\n                <h1>AddBookPopup</h1>\r\n            </div>\r\n            <div className=\"add-book-popup\">\r\n                <div className=\"container\">\r\n                    <form onSubmit={addBook}>\r\n                        <LabelWithInput\r\n                            label=\"Book Name\"\r\n                            name=\"name\"\r\n                            placeholder=\"Book Name\"\r\n                            value={name}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <LabelWithInput\r\n                            label=\"Author Name\"\r\n                            name=\"author\"\r\n                            placeholder=\"Author Name\"\r\n                            value={author}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <LabelWithInput\r\n                            type=\"date\"\r\n                            label=\"Date of publish\"\r\n                            name=\"date\"\r\n                            placeholder=\"Date of publish\"\r\n                            value={date}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <LabelWithInput\r\n                            isTextArea={true}\r\n                            label=\"Description\"\r\n                            name=\"description\"\r\n                            placeholder=\"Enter book description\"\r\n                            value={description}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <button className=\"btn form-control\">\r\n                            {updateMode ? \"Update\" : \"Add\"}\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default AddBookPopup;","import {routeRules} from \"./routeRules\";\r\nimport Login from \"../container/login\";\r\nimport Books from \"../container/books\";\r\n\r\nexport const routesData = [\r\n    {\r\n        path: routeRules.signIn,\r\n        component: Login,\r\n        auth: false,\r\n        exact: false\r\n    },\r\n    {\r\n        path: routeRules.signUp,\r\n        component: Login,\r\n        auth: false,\r\n        exact: false\r\n    },\r\n    {\r\n        path: routeRules.books,\r\n        component: Books,\r\n        auth: false,\r\n        exact: false\r\n    },\r\n\r\n\r\n\r\n    {\r\n        key: routeRules.login,\r\n        path: routeRules.login,\r\n        component: Login,\r\n        auth: false,\r\n        exact: false\r\n    }\r\n];\r\n","import React, {useEffect, useState} from 'react';\r\nimport TableList from \"../../components/tableList\";\r\nimport AddBookPopup from \"./AddBookPopup\";\r\nimport usePikachu from \"../../hooks/usePikachu\";\r\nimport LabelWithInput from \"../../components/labelWithInput\";\r\n\r\nconst Books = () => {\r\n\r\n    const tableHead = [\"Book Id\", \"Book Name\", \"Author\", \"Publish Date\", \"Description\", \"Edit\"]\r\n\r\n    const { books } = usePikachu();\r\n\r\n    const [bookList, setBookList] = useState([])\r\n\r\n    const [showAddBook, setShowAddBook] = useState(false)\r\n\r\n    const [updateMode, setUpdateMode] = useState(false)\r\n\r\n    const [editBookData, setEditBookData] = useState(null)\r\n\r\n    const handleEditBook = (book) => {\r\n        setShowAddBook(true);\r\n        setUpdateMode(true);\r\n        setEditBookData(book)\r\n    }\r\n\r\n    const addNewBook = () => {\r\n        setShowAddBook(show => !show);\r\n        setEditBookData(null)\r\n        setUpdateMode(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let afterAddEdit = books.map((book, index) => {\r\n            book['edit'] = (\r\n                <span onClick={() => handleEditBook(book)}>\r\n                    <i className=\"fas fa-edit\"/>\r\n                </span>\r\n            )\r\n            return book\r\n        })\r\n        setBookList(afterAddEdit)\r\n    }, [books])\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const [searchBooks, setSearchBooks ] = useState([])\r\n\r\n    const handleInputChange = ({target: {name, value}}) => {\r\n        if (name === \"search\") setSearch(value)\r\n        let filterData = bookList.filter((book) => {\r\n            if (book.name.includes(value)){\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        })\r\n        setSearchBooks(filterData);\r\n     }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n\r\n            <div className=\"d-flex\">\r\n                <div className=\"col-4\">\r\n                    <LabelWithInput\r\n                        label=\"\"\r\n                        name=\"search\"\r\n                        placeholder=\"Search Book\"\r\n                        value={search}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-4\"/>\r\n                <div className=\"float-right\">\r\n                    <button\r\n                        className=\"btn btn-success\"\r\n                        onClick={addNewBook}>\r\n                        Add New Book\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"text-center\">\r\n                <h2>Book List</h2>\r\n            </div>\r\n\r\n            <div className=\"books-table\">\r\n                <TableList\r\n                    tableHead={tableHead}\r\n                    tableBody={search === \"\" ? bookList: searchBooks }\r\n                />\r\n            </div>\r\n\r\n            <AddBookPopup\r\n                show={showAddBook}\r\n                hidePopup={addNewBook}\r\n                updateMode={updateMode}\r\n                editBookData={editBookData}\r\n            />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Books;\r\n","import React from 'react';\r\nimport usePikachu from \"../../hooks/usePikachu\";\r\n\r\nconst Header = () => {\r\n\r\n    const { userDetails} = usePikachu();\r\n\r\n    return (\r\n        <div className='header'>\r\n            <div className=\"\">\r\n                <div className='text-center'>\r\n                    Hello {userDetails}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"../Navigations/header\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst AppLayout = (props) => {\r\n    toast.configure({\r\n        autoClose: 3000,\r\n        draggable: false,\r\n        hideProgressBar: true\r\n    });\r\n    return (\r\n        <>\r\n            <Header/>\r\n            {props.children}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AppLayout;\r\n","import React from 'react';\r\nimport {Route, Redirect} from \"react-router-dom\";\r\nimport AppLayout from \"../layout/AppLayout\";\r\n\r\nconst AppRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={matchProps => {\r\n                if (localStorage.getItem('token') !== \"\"){\r\n                    return (\r\n                        <AppLayout {...matchProps}>\r\n                            <Component {...matchProps}/>\r\n                        </AppLayout>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/\",\r\n                                state: {\r\n                                    from: matchProps.location\r\n                                }\r\n                            }}\r\n                        />\r\n                    )\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default AppRoute;\r\n","import React from 'react';\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst DefaultLayout = (props) => {\r\n    toast.configure({\r\n        autoClose: 3000,\r\n        draggable: false,\r\n        hideProgressBar: true\r\n    });\r\n    return (\r\n        <>\r\n            {/*<Header/>*/}\r\n            {props.children}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DefaultLayout;\r\n","import React from 'react';\r\nimport { Route } from \"react-router-dom\";\r\nimport DefaultLayout from \"../layout/DefaultLayout\";\r\n\r\nconst DefaultRoute = ({component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={matchProps => {\r\n                return (\r\n                    <DefaultLayout {...matchProps}>\r\n                        <Component {...matchProps}/>\r\n                    </DefaultLayout>\r\n                )\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default DefaultRoute;\r\n","import React, {Fragment}  from 'react';\r\n\r\nfunction NotFound (props){\r\n    return (\r\n        <Fragment>\r\n            <h1>404 Not Found</h1>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport {AppProvider} from \"./context/AppContext\";\r\nimport {BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport {routeRules} from \"./routes/routeRules\";\r\nimport {routesData} from \"./routes/routesData\";\r\nimport AppRoute from \"./layoutRoute/AppRoute\";\r\nimport DefaultRoute from \"./layoutRoute/DefaultRoute\";\r\nimport NotFound from \"./components/notFound\";\r\n\r\nfunction App() {\r\n    return (\r\n        <AppProvider>\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path='/'>\r\n                        <Redirect to={routeRules.signIn}/>\r\n                    </Route>\r\n                    {\r\n                        routesData.map((route, index) => {\r\n                            if (route.auth){\r\n                                return <AppRoute {...route} key={index} />\r\n                            } else {\r\n                                return <DefaultRoute {...route} key={index}/>\r\n                            }\r\n                        })\r\n                    }\r\n                    <Route path=\"*\" exact={true}   component={NotFound} />\r\n                </Switch>\r\n            </Router>\r\n        </AppProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './assets/css/main.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}